<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:core="mx.core.*" width="100%" height="100%"
          title="@Resource(bundle='ReportPanel',key='reports')"
          paddingLeft="2" paddingTop="2" paddingRight="2" paddingBottom="2"
          creationComplete="init();">

    <mx:Script>
        <![CDATA[
        import com.hexagonstar.util.debug.Debug;

        import mx.collections.ArrayList;
        import mx.containers.FormItem;

        import mx.controls.Alert;
        import mx.controls.DateField;
        import mx.controls.TextInput;
        import mx.core.UIComponent;
        import mx.rpc.AsyncResponder;
        import mx.rpc.events.ResultEvent;

        import org.yes.cart.report.impl.ReportDescriptor;
        import org.yes.cart.report.impl.ReportPair;
        import org.yes.cart.report.impl.ReportParameter;
        import org.yes.cart.shopmanager.ShopManagerGlobal;

        [Bindable]
        private var pdf:ByteArray;

        private var reportName:String;

        private function init():void {
            localeFilter = resourceManager.getString('ReportPanel', 'localeFilter');
            remoteReportService.getReportDescriptors();

        }


        /**
         * Get report display name, which depends from current locale.
         * @param item report descriptor.
         * @return report display name.
         */
        private function getReportLabel(itm:Object):String {
            var reportDesriptor:ReportDescriptor = itm as ReportDescriptor;
            var rez:String = reportDesriptor.reportId;
            try {
                for (var i:int = 0; i < reportDesriptor.langLabel.length; i++) {
                    var langLabel:ReportPair = ReportPair(reportDesriptor.langLabel.getItemAt(i));
                    if (langLabel != null) {
                        Debug.trace(langLabel);
                        if (langLabel.lang == localeFilter) {
                            rez = langLabel.value;
                            break;
                        }

                    }
                }

            } catch (errObject:Error) {
                rez = rez + errObject.message;
            }


            return rez;
        }

        /**
         * Fill parameter form with new parameters to get user input for selected report.
         * @param event
         */
        private function fillParameterForm(event:Event):void {



            var reportDescriptor:ReportDescriptor = ReportDescriptor(reportComboBox.selectedItem);

            parameterForm.removeAllChildren();

            pdf = null;

            for (var i:int = 0; i < reportDescriptor.parameters.length; i++) {

                var repoParam:ReportParameter = ReportParameter(reportDescriptor.parameters.getItemAt(i));
                for (var j:int = 0; i < repoParam.langLabel.length; j++) {

                    var localizedParamName:ReportPair = ReportPair(repoParam.langLabel.getItemAt(j));
                    if (localizedParamName.lang == localeFilter) {

                        var formItem:FormItem = new FormItem();
                        formItem.label = localizedParamName.value;

                        if (repoParam.allowedValuesQuery != null && repoParam.allowedValuesQuery.length > 0) {
                            var cbmBox:ComboBox = new ComboBox();
                            cbmBox.prompt = resourceManager.getString('ReportPanel', 'selectDataPrompt');
                            cbmBox.labelField = "value";
                            remoteReportService.getParameterValues(repoParam.allowedValuesQuery).addResponder(
                                    new AsyncResponder(
                                            function (event:ResultEvent, obj:Object = null):void {
                                                cbmBox.dataProvider = event.result;
                                            }
                                            ,
                                            ShopManagerGlobal.instance.defaultFaultHandler
                                    )
                            );
                            formItem.addChild(cbmBox); //todo data
                        } else {
                            formItem.addChild(new TextInput());
                        }

                        parameterForm.addChild(formItem);

                    }
                }
            }

            okBtnCrtlBar.width = parameterForm.width;
        }


        /**
         * Collect report parameters from form.
         * @returnarray list , which contains report parameters
         */
        private function collectReportParameters():ArrayList {
            var rez:ArrayList = new ArrayList();
            for (var i:int = 0; i < parameterForm.getChildren().length; i++) {
                var item:Object = parameterForm.getChildAt(i);
                if (item is FormItem) {
                    var formItem:FormItem = item as FormItem;
                    var uiComponent:UIComponent = UIComponent(formItem.getChildAt(0));
                    if (uiComponent is ComboBox) {
                        rez.addItem(ComboBox(uiComponent).selectedItem.lang);
                    } else if (uiComponent is TextInput) {
                        rez.addItem(TextInput(uiComponent).text);
                    } else {
                        Debug.trace(" Cant determinate ui type for  " + formItem + " value extracted as null and will be passed as report parameter");
                        rez.addItem(null);
                    }
                }
            }
            return rez;

        }

        private function downloadReport(event:MouseEvent):void {
            //http://forums.adobe.com/message/3614898
            var fileReference:FileReference = new FileReference();

            fileReference.save(
                    pdf,
                    reportName
            );

        }

        /**
         * Create report on server side. Donload as byte array and prompt user to save it on disk.
         *
         * @param event mouse event
         */
        private function createReport(event:MouseEvent):void {

            pdf = null;
            reportName = getReportLabel(reportComboBox.selectedItem) + "_" + DateField.dateToString(new Date(), "DD-MM-YYYY") + ".pdf";

            for (var obj:Object in parameterForm.getChildren()) {
                Debug.traceObj(obj, 10);
            }

            var reportDescriptor:ReportDescriptor = ReportDescriptor(reportComboBox.selectedItem);

            remoteReportService.downloadReport(
                    localeFilter,
                    reportDescriptor.reportId,
                    collectReportParameters()
            ).addResponder(
                    new AsyncResponder(
                            function (event:ResultEvent, obj:Object = null):void {
                                pdf = ByteArray(event.result);
                                Alert.show(
                                        resourceManager.getString("ReportPanel", "reportReadyToSave"),
                                        resourceManager.getString("ReportPanel", "info"));
                            }
                            ,
                            ShopManagerGlobal.instance.defaultFaultHandler
                    )
            );

        }
        ]]>
    </mx:Script>

    <mx:String id="localeFilter"/>


    <mx:RemoteObject showBusyCursor="true" id="remoteReportService"
                     destination="remoteReportService"
                     result="ShopManagerGlobal.instance.defaultResultHandler(event)"
                     fault="ShopManagerGlobal.instance.defaultFaultHandler(event)"
                     channelSet="{ShopManagerGlobal.instance.channelSet}">
        <mx:makeObjectsBindable>true</mx:makeObjectsBindable>
    </mx:RemoteObject>

    <mx:Canvas width="100%" height="100%">
        <mx:VBox x="0" y="0" width="100%" height="100%" id="shopManagmenlPanel">
            <mx:ControlBar width="100%">
                <mx:Text text="@Resource(bundle='ReportPanel',key='report')"/>
                <mx:ComboBox id="reportComboBox"
                             labelFunction="getReportLabel"
                             data="reportId"
                             dataProvider="{remoteReportService.getReportDescriptors.lastResult}"
                             change="fillParameterForm(event)"
                             prompt="@Resource(bundle='ReportPanel',key='selectReportPropmt')">
                </mx:ComboBox>
            </mx:ControlBar>

            <mx:Form id="parameterForm" visible="{reportComboBox.selectedItem != null}" x="0" y="0" borderStyle="solid"
                     borderVisible="true">
                <mx:FormItem label="@Resource(bundle='BrandManagementPanel',key='name')">
                    <mx:TextInput id="nameTextImput" width="200"/>
                </mx:FormItem>
                <mx:FormItem label="@Resource(bundle='BrandManagementPanel',key='description')">
                    <mx:TextArea id="descriptionTextInput" width="200"/>
                </mx:FormItem>


            </mx:Form>

            <mx:ControlBar id="okBtnCrtlBar"
                           width="100%"  visible="{reportComboBox.selectedItem != null}">


                <mx:Button visible="{pdf != null}" click="downloadReport(event)"
                           id="saveBtn" label="@Resource(bundle='ReportPanel',key='save')"/>

                <mx:Button visible="{reportComboBox.selectedItem != null}" click="createReport(event)"
                           id="okBtn" label="@Resource(bundle='ReportPanel',key='ok')"/>

            </mx:ControlBar>


        </mx:VBox>
    </mx:Canvas>


</mx:Panel>