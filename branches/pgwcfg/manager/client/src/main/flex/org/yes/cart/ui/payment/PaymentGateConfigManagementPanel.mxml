<?xml version="1.0"?>
<!--
  - Copyright 2009 Igor Azarnyi, Denys Pavlov
  -
  -    Licensed under the Apache License, Version 2.0 (the "License");
  -    you may not use this file except in compliance with the License.
  -    You may obtain a copy of the License at
  -
  -        http://www.apache.org/licenses/LICENSE-2.0
  -
  -    Unless required by applicable law or agreed to in writing, software
  -    distributed under the License is distributed on an "AS IS" BASIS,
  -    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  -    See the License for the specific language governing permissions and
  -    limitations under the License.
  -->
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
           xmlns:prod="org.yes.cart.ui.product.*"
           xmlns:seo="org.yes.cart.ui.seo.*"
           width="100%" height="100%" creationComplete="init();">
    <mx:Panel width="100%" height="100%" title="@Resource(bundle='PaymentGateConfigManagementPanel',key='pgwconfig')"
              paddingLeft="2" paddingRight="2" paddingTop="2" paddingBottom="2">

        <mx:VDividedBox width="100%" height="100%">
            <mx:VBox width="100%" height="50%">
                <mx:DataGrid id="gatewayGrid" width="100%" height="100%"
                             itemClick="onGatewaySelected(event)">
                    <mx:columns>
                        <mx:DataGridColumn width="200"
                                           headerText="@Resource(bundle='PaymentGateConfigManagementPanel',key='label')"
                                           dataField="label"/>
                        <mx:DataGridColumn width="400"
                                           headerText="@Resource(bundle='PaymentGateConfigManagementPanel',key='name')"
                                           dataField="name"/>

                        <mx:DataGridColumn width="60"
                                           headerText="@Resource(bundle='PaymentGateConfigManagementPanel',key='active')"
                                           dataField="active" textAlign="center">
                            <mx:itemRenderer>
                                <mx:Component>
                                    <mx:HBox horizontalAlign="center">
                                        <mx:CheckBox enabled="false" selected="{data.active}"/>
                                    </mx:HBox>
                                </mx:Component>
                            </mx:itemRenderer>
                        </mx:DataGridColumn>


                    </mx:columns>
                </mx:DataGrid>
            </mx:VBox>
            <mx:VBox width="100%" height="50%">
                <mx:DataGrid id="parameterGrid" width="100%" height="100%" visible="{gatewayGrid.selectedItem != null}">
                    <mx:columns>
                        <mx:DataGridColumn width="200"
                                           headerText="@Resource(bundle='PaymentGateConfigManagementPanel',key='name')"
                                           dataField="name"/>
                        <mx:DataGridColumn width="400"
                                           headerText="@Resource(bundle='PaymentGateConfigManagementPanel',key='value')"
                                           dataField="value">

                            <mx:itemRenderer>
                                <mx:Component>
                                    <mx:HBox>
                                        <mx:TextInput id="valueTextInput" editable="false" width="100%"
                                                      text="{data.value}"/>
                                        <mx:Button id="editBtn" width="30"
                                                   label="..."
                                                   click="Alert.show('asdasasdasd');"/>
                                        <mx:Script><![CDATA[
                                            import mx.controls.Alert;
                                            ]]></mx:Script>
                                    </mx:HBox>
                                </mx:Component>
                            </mx:itemRenderer>


                        </mx:DataGridColumn>
                    </mx:columns>
                </mx:DataGrid>

            </mx:VBox>
        </mx:VDividedBox>

    </mx:Panel>


    <mx:RemoteObject showBusyCursor="true" id="remotePaymentModulesManagementService"
                     destination="remotePaymentModulesManagementService"
                     channelSet="{ShopManagerGlobal.instance.channelSet}"/>

    <mx:String id="localeFilter"/>


    <mx:Script><![CDATA[
        import mx.events.ListEvent;
        import mx.rpc.AsyncResponder;
        import mx.rpc.events.ResultEvent;
        import mx.controls.Alert;

        import org.yes.cart.shopmanager.ShopManagerGlobal;

        /**
         * Init created panel.
         */
        private function init():void {
            localeFilter = resourceManager.getString('ReportPanel', 'localeFilter');       //todo move to one place
            loadGatewayList()
        }

        /**
         * Load payment gateways configuration.
         */
        private function loadGatewayList():void {
            remotePaymentModulesManagementService.getPaymentGateways(localeFilter).addResponder(
                    new AsyncResponder(
                            function (event:ResultEvent, obj:Object = null):void {
                                gatewayGrid.dataProvider = event.result;
                            }
                            ,
                            ShopManagerGlobal.instance.defaultOnRpcMethodFault)
            );
        }

        /**
         * Handle gataway selection event.
         * @param event
         */
        private function onGatewaySelected(event:ListEvent):void {

            remotePaymentModulesManagementService.getPaymentGatewayParameters(gatewayGrid.selectedItem.label, localeFilter).addResponder(
                    new AsyncResponder(
                            function (event:ResultEvent, obj:Object = null):void {
                                parameterGrid.dataProvider = event.result;
                            }
                            ,
                            ShopManagerGlobal.instance.defaultOnRpcMethodFault)
            );


        }
        ]]></mx:Script>
</mx:Canvas>
